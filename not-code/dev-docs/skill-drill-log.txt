
                                    Skill Drill Log

-------------------------------------------------------------------------------
        *  Serialise
        *  set classes move to lib
        *  unit test for sets
        *  Deserialise
        *  Consider interplay and dupe with serialize and api tests
        *  Use test assertions in older tests
        *  Move to test util or util/testutil package, with maybe lib move too
        *  Find how to fmt all or test all
        *  Lower case email
        o  Add in app state and user states
            *  Decide on naming
                *  UiState
            *  Rename nodes to make hierachy easier to see
            *  Anticipate api requirements
                *  expose set api
            *  Test up 
                *  satisfy serialization first 
                    *  make api call in make simple model
                    *  make err msgs exported constants, comment them and use 
                       them in tests
                       *  code to consts
                       *  Use consts in tests
                       *  tests pass
                    *  populate api method for real
                        *  when you add a person you must init a state for them
                    *  how test serialize?
                        *  ensure that node is collapsed in what comes back from
                           deserialize
                o  what is left?
                    o  stimulate errors in tests when collapsing unknown skills
                       or for unknown people


-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
Model use cases
    o  From user actions
        o  Register user with skill / deregister
        o  Edit skill title or desc
        o  Fmt desc with / without context of hierachy
        o  Fmt root of desc to aide editing
        o  List emails of people with skill
        o  Has this user, this skill
        o  Enumerate display model Collapse / expand behaviour
    o  From lifecycle
        o  Level of node
        o  Serialise whole model
        o  Build model from serialised
    o  From admin
        o  Rename a skill
        o  Move skill to diff part of hierachy
-------------------------------------------------------------------------------
State for one user
    o  Which skill nodes are collapsed is sufficient setofint
    o  States for all users - one of these in map per email
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
